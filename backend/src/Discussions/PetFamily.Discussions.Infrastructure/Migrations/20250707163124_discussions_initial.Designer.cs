// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetFamily.Discussions.Infrastructure.DbContexts;


#nullable disable

namespace PetFamily.Discussions.Infrastructure.Migrations
{
    [DbContext(typeof(DiscussionsWriteDbContext))]
    [Migration("20250707163124_discussions_initial")]
    partial class discussions_initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("discussions")
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetFamily.Discussions.Domain.Entities.Discussion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("discussion_id");

                    b.ComplexProperty<Dictionary<string, object>>("RelationId", "PetFamily.Discussions.Domain.Entities.Discussion.RelationId#RelationId", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("relation_id");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Status", "PetFamily.Discussions.Domain.Entities.Discussion.Status#DiscussionStatus", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("discussion_status");
                        });

                    b.HasKey("Id")
                        .HasName("pk_discussions");

                    b.ToTable("discussions", "discussions");
                });

            modelBuilder.Entity("PetFamily.Discussions.Domain.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("message_id");

                    b.Property<Guid?>("discussion_id")
                        .HasColumnType("uuid");

                    b.ComplexProperty<Dictionary<string, object>>("CreationDate", "PetFamily.Discussions.Domain.Entities.Message.CreationDate#CreationDate", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<DateTime>("Value")
                                .HasColumnType("timestamp with time zone")
                                .HasColumnName("creation_date");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("IsEdited", "PetFamily.Discussions.Domain.Entities.Message.IsEdited#IsEdited", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<bool>("Value")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("boolean")
                                .HasDefaultValue(false)
                                .HasColumnName("is_edited");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Text", "PetFamily.Discussions.Domain.Entities.Message.Text#Text", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("text");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("UserId", "PetFamily.Discussions.Domain.Entities.Message.UserId#UserId", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("user_id");
                        });

                    b.HasKey("Id")
                        .HasName("pk_message");

                    b.HasIndex("discussion_id");

                    b.ToTable("messages", "discussions");
                });

            modelBuilder.Entity("PetFamily.Discussions.Domain.Entities.Discussion", b =>
                {
                    b.OwnsMany("PetFamily.Discussions.Domain.ValueObjects.Shared.UserId", "UserIds", b1 =>
                        {
                            b1.Property<Guid>("DiscussionId")
                                .HasColumnType("uuid");

                            b1.Property<int>("__synthesizedOrdinal")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "id");

                            b1.HasKey("DiscussionId", "__synthesizedOrdinal");

                            b1.ToTable("discussions", "discussions");

                            b1.ToJson("users");

                            b1.WithOwner()
                                .HasForeignKey("DiscussionId");
                        });

                    b.Navigation("UserIds");
                });

            modelBuilder.Entity("PetFamily.Discussions.Domain.Entities.Message", b =>
                {
                    b.HasOne("PetFamily.Discussions.Domain.Entities.Discussion", null)
                        .WithMany("Messages")
                        .HasForeignKey("discussion_id");
                });

            modelBuilder.Entity("PetFamily.Discussions.Domain.Entities.Discussion", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
